<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="27" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="14247" started-at="2022-09-13T18:07:13 IST" finished-at="2022-09-13T18:07:27 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="14247" started-at="2022-09-13T18:07:13 IST" finished-at="2022-09-13T18:07:27 IST">
      <class name="com.employee.TestCases.TC003_POST_EmployeeRecord">
        <test-method status="PASS" signature="postEmployeeRecord()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="postEmployeeRecord" is-config="true" duration-ms="1160" started-at="2022-09-13T18:07:24 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployeeRecord -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="setup" is-config="true" duration-ms="0" started-at="2022-09-13T18:07:24 IST" finished-at="2022-09-13T18:07:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="checkContentEncoding()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="checkContentEncoding" duration-ms="7" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [gzip] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [gzip] but found [null]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEqualsImpl(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.employee.TestCases.TC003_POST_EmployeeRecord.checkContentEncoding(TC003_POST_EmployeeRecord.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="checkResponseBody" duration-ms="0" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="checkResponseTime" duration-ms="0" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkServerType()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="checkServerType" duration-ms="8" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nginx] but found [Apache]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nginx] but found [Apache]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.employee.TestCases.TC003_POST_EmployeeRecord.checkServerType(TC003_POST_EmployeeRecord.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="checkStatusCode" duration-ms="0" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="checkStatusLine" duration-ms="16" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.TestCases.TC003_POST_EmployeeRecord@167fdd33]" name="tearDown" duration-ms="0" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.TestCases.TC003_POST_EmployeeRecord -->
      <class name="com.employee.TestCases.TC001_GET_AllEmployeeData">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="setup" is-config="true" duration-ms="192" started-at="2022-09-13T18:07:13 IST" finished-at="2022-09-13T18:07:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployee()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="getAllEmployee" is-config="true" duration-ms="8849" started-at="2022-09-13T18:07:13 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployee -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="checkContentEncoding" duration-ms="29" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="checkResponseBody" duration-ms="80" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="checkResponseTime" duration-ms="8" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="checkServerType" duration-ms="8" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="checkStatusCode" duration-ms="8" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="checkStatusLine" duration-ms="8" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.TestCases.TC001_GET_AllEmployeeData@1d29cf23]" name="tearDown" duration-ms="8" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.TestCases.TC001_GET_AllEmployeeData -->
      <class name="com.employee.TestCases.TC005_DELETERecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employee.TestCases.TC005_DELETERecord@5f282abb]" name="setup" is-config="true" duration-ms="8" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="postEmployeeRecord()[pri:0, instance:com.employee.TestCases.TC005_DELETERecord@5f282abb]" name="postEmployeeRecord" is-config="true" duration-ms="1160" started-at="2022-09-13T18:07:22 IST" finished-at="2022-09-13T18:07:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployeeRecord -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employee.TestCases.TC005_DELETERecord@5f282abb]" name="checkResponseBody" duration-ms="29" started-at="2022-09-13T18:07:23 IST" finished-at="2022-09-13T18:07:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.employee.TestCases.TC005_DELETERecord.checkResponseBody(TC005_DELETERecord.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employee.TestCases.TC005_DELETERecord@5f282abb]" name="checkStatusCode" duration-ms="16" started-at="2022-09-13T18:07:24 IST" finished-at="2022-09-13T18:07:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [429]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [429]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at com.employee.TestCases.TC005_DELETERecord.checkStatusCode(TC005_DELETERecord.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkStatusLine()[pri:0, instance:com.employee.TestCases.TC005_DELETERecord@5f282abb]" name="checkStatusLine" duration-ms="0" started-at="2022-09-13T18:07:24 IST" finished-at="2022-09-13T18:07:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 429 Too Many Requests]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 429 Too Many Requests]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.employee.TestCases.TC005_DELETERecord.checkStatusLine(TC005_DELETERecord.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employee.TestCases.TC005_DELETERecord -->
      <class name="com.employee.TestCases.TC004_PUT_UpdateRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="setup" is-config="true" duration-ms="8" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="postEmployeeRecord()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="postEmployeeRecord" is-config="true" duration-ms="1080" started-at="2022-09-13T18:07:25 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployeeRecord -->
        <test-method status="FAIL" signature="checkContentEncoding()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="checkContentEncoding" duration-ms="8" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [gzip] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [gzip] but found [null]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEqualsImpl(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.employee.TestCases.TC004_PUT_UpdateRecord.checkContentEncoding(TC004_PUT_UpdateRecord.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="checkResponseBody" duration-ms="8" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="checkResponseTime" duration-ms="8" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="checkServerType" duration-ms="8" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="checkStatusCode" duration-ms="0" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="checkStatusLine" duration-ms="8" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.TestCases.TC004_PUT_UpdateRecord@1e965684]" name="tearDown" duration-ms="8" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.TestCases.TC004_PUT_UpdateRecord -->
      <class name="com.employee.TestCases.TC002_GET_SingleEmployeeData">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employee.TestCases.TC002_GET_SingleEmployeeData@4d95d2a2]" name="setup" is-config="true" duration-ms="24" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getSingleEmployee()[pri:0, instance:com.employee.TestCases.TC002_GET_SingleEmployeeData@4d95d2a2]" name="getSingleEmployee" is-config="true" duration-ms="1136" started-at="2022-09-13T18:07:26 IST" finished-at="2022-09-13T18:07:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleEmployee -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employee.TestCases.TC002_GET_SingleEmployeeData@4d95d2a2]" name="checkResponseBody" duration-ms="8" started-at="2022-09-13T18:07:27 IST" finished-at="2022-09-13T18:07:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.TestCases.TC002_GET_SingleEmployeeData@4d95d2a2]" name="checkResponseTime" duration-ms="0" started-at="2022-09-13T18:07:27 IST" finished-at="2022-09-13T18:07:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employee.TestCases.TC002_GET_SingleEmployeeData@4d95d2a2]" name="checkStatusCode" duration-ms="8" started-at="2022-09-13T18:07:27 IST" finished-at="2022-09-13T18:07:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
      </class> <!-- com.employee.TestCases.TC002_GET_SingleEmployeeData -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
